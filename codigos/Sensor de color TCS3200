// Definición de pines
#define S0 8
#define S1 9
#define S2 10
#define S3 11
#define OUT 12

// Variables para almacenar los valores RGB
int red, green, blue;

void setup() {
  // Configurar pines de control
  pinMode(S0, OUTPUT);
  pinMode(S1, OUTPUT);
  pinMode(S2, OUTPUT);
  pinMode(S3, OUTPUT);
  pinMode(OUT, INPUT);
  
  // Configurar frecuencia de salida (20%)
  digitalWrite(S0, HIGH);
  digitalWrite(S1, LOW);
  
  Serial.begin(9600);
}

void loop() {
  // Leer valores RGB
  red = getColorValue(0);    // Rojo (S2=BAJO, S3=BAJO)
  green = getColorValue(1);  // Verde (S2=ALTO, S3=ALTO)
  blue = getColorValue(2);   // Azul (S2=BAJO, S3=ALTO)
  
  // Mostrar valores en el monitor serial
  Serial.print("Rojo: ");
  Serial.print(red);
  Serial.print(" | Verde: ");
  Serial.print(green);
  Serial.print(" | Azul: ");
  Serial.print(blue);
  
  // Detectar color predominante
  detectColor(red, green, blue);
  
  delay(1000);  // Espera 1 segundo entre lecturas
}

// Función para leer el valor de un color específico
int getColorValue(int color) {
  switch(color) {
    case 0: // Rojo
      digitalWrite(S2, LOW);
      digitalWrite(S3, LOW);
      break;
    case 1: // Verde
      digitalWrite(S2, HIGH);
      digitalWrite(S3, HIGH);
      break;
    case 2: // Azul
      digitalWrite(S2, LOW);
      digitalWrite(S3, HIGH);
      break;
  }
  // Medir el pulso de salida
  return pulseIn(OUT, LOW);
}

// Función para detectar el color predominante
void detectColor(int r, int g, int b) {
  // Determinar el valor más bajo (menor valor = más intenso)
  if (r < g && r < b) {
    Serial.println(" -> COLOR ROJO");
  } 
  else if (g < r && g < b) {
    Serial.println(" -> COLOR VERDE");
  } 
  else if (b < r && b < g) {
    Serial.println(" -> COLOR AZUL");
  } 
  else if (r < 100 && g < 100 && b < 100) {
    Serial.println(" -> BLANCO");
  } 
  else if (r > 200 && g > 200 && b > 200) {
    Serial.println(" -> NEGRO");
  }
  else {
    Serial.println(" -> COLOR INDETERMINADO");
  }
}
